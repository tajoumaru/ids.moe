/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/{platform}/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all platform IDs for an anime */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Platform name or alias */
                    platform: "myanimelist" | "mal" | "anilist" | "al" | "anidb" | "anime-planet" | "ap" | "anisearch" | "annict" | "imdb" | "kaize" | "kitsu" | "kt" | "livechart" | "nautiljon" | "notify" | "otakotaku" | "shikimori" | "shoboi" | "silveryasha" | "simkl" | "themoviedb" | "thetvdb" | "tvdb" | "trakt";
                    /** @description Platform-specific ID (number or string depending on platform) */
                    id: number | string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Anime"];
                    };
                };
                /** @description Anime not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Database statistics and platform counts */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Status information */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Status"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/heartbeat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health check with response time */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Health check response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Heartbeat"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/redirect": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Platform redirects */
        get: {
            parameters: {
                query: {
                    /** @description Source platform */
                    from: string;
                    /** @description Target platform */
                    to: string;
                    /** @description ID to redirect */
                    id: number | string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Redirect to target platform */
                302: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Anime not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schema": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** API schema documentation */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OpenAPI schema */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": Record<string, never>;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Anime Schema
         * @description Schema for anime
         */
        Anime: {
            /**
             * Title
             * @description Title of the anime
             */
            title: string;
            /**
             * aniDB
             * @description aniDB ID, website: https://anidb.net/
             * @default null
             */
            anidb: number | null;
            /**
             * AniList
             * @description AniList ID, website: https://anilist.co/
             * @default null
             */
            anilist: number | null;
            /**
             * Anime News Network
             * @description Anime News Network, website: https://animenewsnetwork.com
             * @default null
             */
            animenewsnetwork: number | null;
            /**
             * Anime-Planet
             * @description Anime-Planet slug, website: https://www.anime-planet.com/
             * @default null
             */
            animeplanet: string | null;
            /**
             * AniSearch
             * @description AniSearch ID, website: https://www.anisearch.com/, https://anisearch.de, https://anisearch.it, https://anisearch.es, https://anisearch.fr, https://anisearch.jp
             * @default null
             */
            anisearch: number | null;
            /**
             * Annict
             * @description Annict ID, website: https://annict.com/, https://en.annict.com/, https://annict.jp/
             * @default null
             */
            annict: number | null;
            /**
             * IMDb
             * @description IMDb ID, website: https://www.imdb.com/
             * @default null
             */
            imdb: string | null;
            /**
             * Kaize
             * @description Kaize slug, website: https://kaize.io/
             * @default null
             */
            kaize: string | null;
            /**
             * Kaize ID
             * @description Kaize ID in integer format, not recommended as some entry can't be found its ID compared to slug
             * @default null
             */
            kaize_id: number | null;
            /**
             * Kitsu
             * @description Kitsu ID in integer, slug not suppported, website: https://kitsu.app/
             * @default null
             */
            kitsu: number | null;
            /**
             * LiveChart
             * @description LiveChart ID, website: https://www.livechart.me/
             * @default null
             */
            livechart: number | null;
            /**
             * MyAnimeList
             * @description MyAnimeList ID, website: https://myanimelist.net/
             * @default null
             */
            myanimelist: number | null;
            /**
             * Nautiljon
             * @description Nautiljon slug in plus, website: https://www.nautiljon.com/
             * @default null
             */
            nautiljon: string | null;
            /**
             * Nautiljon ID
             * @description Nautiljon ID in integer format, used internally
             * @default null
             */
            nautiljon_id: number | null;
            /**
             * Notify.moe
             * @description Notify.moe Base64 ID, website: https://notify.moe/
             * @default null
             */
            notify: string | null;
            /**
             * Otak Otaku
             * @description Otak Otaku ID, website: https://otakotaku.com/
             * @default null
             */
            otakotaku: number | null;
            /**
             * Shikimori/Шикимори
             * @description Shikimori ID (nonprefixed), based on MyAnimeList ID. Remove prefix if found on the ID, website: https://shikimori.one/
             * @default null
             */
            shikimori: number | null;
            /**
             * Shoboi/Syobocal/しょぼいカレンダー
             * @description Shoboi ID, website: http://cal.syoboi.jp/
             * @default null
             */
            shoboi: number | null;
            /**
             * Silveryasha
             * @description Silveryasha ID, website: https://db.silveryasha.id/
             * @default null
             */
            silveryasha: number | null;
            /**
             * SIMKL
             * @description SIMKL ID, website: https://simkl.com/
             * @default null
             */
            simkl: number | null;
            /**
             * The Movie Database (TMDB)
             * @description The Movie Database ID, website: https://www.themoviedb.org/
             * @default null
             */
            themoviedb: number | null;
            /**
             * The Movie Database (TMDB) Season
             * @description The Movie Database season number, only used if themoviedb_type is 'shows', else null
             * @default null
             */
            themoviedb_season: number | null;
            /**
             * The Movie Database (TMDB) Type
             * @description The Movie Database type, either 'movie' or 'tv'
             * @default null
             */
            themoviedb_type: ("movie" | "tv") | null;
            /**
             * Trakt
             * @description Trakt ID, slug not supported, website: https://trakt.tv/
             * @default null
             */
            trakt: number | null;
            /**
             * Trakt Season
             * @description Trakt season number, only used if trakt_type is 'shows', else null
             * @default null
             */
            trakt_season: number | null;
            /**
             * Trakt Type
             * @description Trakt type, either 'movies' or 'shows'
             * @default null
             */
            trakt_type: ("movies" | "shows") | null;
        };
        Error: {
            error: string;
            message?: string;
        };
        Status: {
            total_anime?: number;
            platform_counts?: {
                [key: string]: number;
            };
        };
        Heartbeat: {
            /** @enum {string} */
            status?: "ok";
            response_time_ms?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
